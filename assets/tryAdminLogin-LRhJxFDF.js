import{S as l,t as d,v as a,w as p,x as u,y as f,r as n,z as m,A as b,u as y}from"./index-CylKWAoP.js";import{u as g}from"./useQuery-vgHNO6Is.js";import{f as v}from"./fetchBackend-C4VrHFCd.js";var O=class extends l{#e;#i=void 0;#t;#s;constructor(t,s){super(),this.#e=t,this.setOptions(s),this.bindMethods(),this.#r()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){const s=this.options;this.options=this.#e.defaultMutationOptions(t),d(this.options,s)||this.#e.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#t,observer:this}),s?.mutationKey&&this.options.mutationKey&&a(s.mutationKey)!==a(this.options.mutationKey)?this.reset():this.#t?.state.status==="pending"&&this.#t.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#t?.removeObserver(this)}onMutationUpdate(t){this.#r(),this.#n(t)}getCurrentResult(){return this.#i}reset(){this.#t?.removeObserver(this),this.#t=void 0,this.#r(),this.#n()}mutate(t,s){return this.#s=s,this.#t?.removeObserver(this),this.#t=this.#e.getMutationCache().build(this.#e,this.options),this.#t.addObserver(this),this.#t.execute(t)}#r(){const t=this.#t?.state??p();this.#i={...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset}}#n(t){u.batch(()=>{if(this.#s&&this.hasListeners()){const s=this.#i.variables,i=this.#i.context;t?.type==="success"?(this.#s.onSuccess?.(t.data,s,i),this.#s.onSettled?.(t.data,null,s,i)):t?.type==="error"&&(this.#s.onError?.(t.error,s,i),this.#s.onSettled?.(void 0,t.error,s,i))}this.listeners.forEach(s=>{s(this.#i)})})}};function M(t,s){const i=f(),[e]=n.useState(()=>new O(i,t));n.useEffect(()=>{e.setOptions(t)},[e,t]);const r=n.useSyncExternalStore(n.useCallback(o=>e.subscribe(u.batchCalls(o)),[e]),()=>e.getCurrentResult(),()=>e.getCurrentResult()),h=n.useCallback((o,c)=>{e.mutate(o,c).catch(m)},[e]);if(r.error&&b(e.options.throwOnError,[r.error]))throw r.error;return{...r,mutate:h,mutateAsync:r.mutate}}async function w(t,s=!0){const i=await v("/oauth/scannerAppLogin/",{method:"POST",credentials:"include",body:JSON.stringify({password:t,verify:s})});if(!i.ok)throw new Error("Network response was not ok");return(await i.json()).success}function x(){const t=y();return g({queryKey:["loggedIn"],queryFn:async()=>{const s=await w("",!1);return s||(console.log("attempting navigate"),t({to:"/AdminLogin"})),s},retry:!1})}export{M as a,w as t,x as u};
